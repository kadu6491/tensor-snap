{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/kadutwum/Desktop/School/Indepedent/tensor-snap/src/component/Camera/CameraView.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as tf from '@tensorflow/tfjs';\nimport * as mn from '@tensorflow-models/mobilenet';\nexport default function CameraView(_ref) {\n  var photo = _ref.photo,\n      retakePicture = _ref.retakePicture,\n      savePhoto = _ref.savePhoto;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  function prediction(url) {\n    return _regeneratorRuntime.async(function prediction$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(\"analyzing....\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(tf.ready());\n\n          case 3:\n            setLoading(\"analyzing Model....\");\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: 'transparent',\n      flex: 1,\n      width: '100%',\n      height: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: {\n      uri: photo && photo.uri\n    },\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      padding: 15,\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'rgba(52, 52, 52, 0.8)',\n      width: \"50%\",\n      height: \"20%\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, loading))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: retakePicture,\n    style: {\n      width: 130,\n      height: 40,\n      alignItems: 'center',\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#fff',\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, \"Re-take\"))))));\n}","map":{"version":3,"sources":["/Users/kadutwum/Desktop/School/Indepedent/tensor-snap/src/component/Camera/CameraView.js"],"names":["React","useState","tf","mn","CameraView","photo","retakePicture","savePhoto","loading","setLoading","prediction","url","ready","backgroundColor","flex","width","height","uri","flexDirection","padding","justifyContent","alignItems","color","textAlign","borderRadius","fontSize"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { ImageBackground, Text, TouchableOpacity, View } from 'react-native'\n\nimport * as tf from '@tensorflow/tfjs'\nimport * as mn from '@tensorflow-models/mobilenet'\n\nexport default function CameraView({photo, retakePicture, savePhoto}) {\n    const [loading, setLoading] = useState('')\n\n    async function prediction(url){\n        setLoading(\"analyzing....\")\n        await tf.ready()\n        setLoading(\"analyzing Model....\")\n    }\n\n    return (\n        <View\n            style={{\n                backgroundColor: 'transparent',\n                flex: 1,\n                width: '100%',\n                height: '50%'\n            }}\n        >\n            <ImageBackground\n                source={{uri: photo && photo.uri}}\n                style={{\n                  flex: 1\n                }}\n            >\n                <View\n                    style={{\n                        flex: 1,\n                        flexDirection: 'column',\n                        padding: 15,\n                        justifyContent: 'space-between',\n                        // backgroundColor: \"red\",\n                    }}\n                >\n                    <View \n                        style={{\n                            // backgroundColor: \"green\",\n                            flex: 1,\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <View\n                            style={{\n                                backgroundColor: 'rgba(52, 52, 52, 0.8)',\n                                width: \"50%\",\n                                height: \"20%\",\n                                justifyContent: \"center\"\n                            }}\n                        >\n                            <Text\n                                style={{\n                                    color: \"white\",\n                                    textAlign: \"center\"\n                                }}\n                            >\n                                {loading}\n                            </Text>\n                        </View>\n                    </View>\n                     <View\n                        style={{\n                        flexDirection: 'row',\n                        justifyContent: 'space-between'\n                        }}\n                    >\n                        <TouchableOpacity\n                            onPress={retakePicture}\n                            style={{\n                                width: 130,\n                                height: 40,\n\n                                alignItems: 'center',\n                                borderRadius: 4\n                            }}\n                        >\n                            <Text\n                                style={{\n                                color: '#fff',\n                                fontSize: 20\n                                }}\n                            >\n                                Re-take\n                            </Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            </ImageBackground>\n\n        </View>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}